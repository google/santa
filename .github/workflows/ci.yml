name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  preqs:
    runs-on: ubuntu-latest
    outputs:
      run_build_and_tests: ${{ steps.step1.outputs.run_build_and_tests }}
      build_driver: ${{ steps.step1.outputs.build_driver }}

    steps:
      - name: Cache bazel output
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}
      - uses: actions/checkout@v2
      - name: Check If We Need to Run Build/Test
        id: step1
        run: |
          git remote add mainline https://github.com/google/santa.git
          git fetch mainline main
          git diff --name-only mainline/main HEAD > files.txt
          echo "FILES CHANGED: $(wc -l ./files.txt)\n"

          cat files.txt

          build_driver=0
          build_and_run_tests=0

          for file in `cat files.txt`; do
            if [[ $file = Source/* ]]; then
              build_and_run_test=1;
              if [[ $file = Source/santa_driver/* || $file = Source/common/* ]]; then
                 build_driver=1;
                 break;
              fi
            fi
          done

          if [[ $build_and_run_test != 0 ]]; then
            echo "NEED TO RUN BUILD AND TESTS"
            echo "::set-output name=run_build_and_tests::true"
          else
            echo "::set-output name=run_build_and_tests::false"
          fi

          if [[ $build_driver != 0 ]]; then
            echo "NEED TO BUILD DRIVER"
            echo "::set-output name=build_driver::true"
          else
            echo "::set-output name=build_driver::false"
          fi

  lint:
    runs-on: ubuntu-latest
    needs: [preqs]
    if: needs.preqs.outputs.run_build_and_tests == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Run linters
        run: ./Testing/lint.sh

  build_userspace:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, macos-11]
    runs-on: ${{ matrix.os }}
    needs: [preqs]
    if: needs.preqs.outputs.run_build_and_tests == 'true'
    steps:
     - uses: actions/checkout@v2
     - name: Build Userspace
       run: bazel build --apple_generate_dsym -c opt :release --define=SANTA_BUILD_TYPE=ci

  build_driver:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, macos-11]
    runs-on: ${{ matrix.os }}
    needs: [preqs]
    if: needs.preqs.outputs.build_driver == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Build Driver
        run: bazel build --apple_generate_dsym -c opt :release_driver --define=SANTA_BUILD_TYPE=ci

  unit_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, macos-11]
    runs-on: ${{ matrix.os }}
    needs: [preqs]
    if: needs.preqs.outputs.run_build_and_tests == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Run All Tests
        run: bazel test :unit_tests --define=SANTA_BUILD_TYPE=ci

  test_coverage:
    runs-on: macos-11
    needs: [preqs]
    if: needs.preqs.outputs.run_build_and_tests == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Generate test coverage
        run: sh ./generate_cov.sh
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./CoverageData/info.lcov
          flag-name: Unit

  benchmark:
    runs-on: macos-11
    needs: [preqs]
    if: needs.preqs.outputs.run_build_and_tests == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Run All Tests
        run: ./Testing/benchmark.sh
